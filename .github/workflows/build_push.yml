name: CI Workflow

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  prepare:
    name: Prepare job
    runs-on: ubuntu-latest
    outputs:
      individualMatrix: ${{ steps.generate-matrices.outputs.individualMatrix }}
    env:
      CI_MODULE_GEN: true
    steps:
      - name: Clone repo
        uses: actions/checkout@v3
        with:
          path: public

      - name: Merge repos
        run: |
          rsync -arI --exclude .git public/ . 
          rm -rf public

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: adopt

      - name: Get number of modules
        run: |
          echo "NUM_INDIVIDUAL_MODULES=$(./gradlew -q projects | grep '.*extensions\:.*\:.*' | wc -l)" >> $GITHUB_ENV

      - id: generate-matrices
        name: Create output matrices
        uses: actions/github-script@v6
        with:
          script: |
            const numIndividualModules = parseInt(process.env.NUM_INDIVIDUAL_MODULES, 10) || 0;
            const chunkSize = parseInt(process.env.CI_CHUNK_SIZE, 10) || 1;

            if (numIndividualModules === 0) {
              console.log('No modules to build.');
              core.setOutput('individualMatrix', JSON.stringify({ chunk: [] }));
              return;
            }

            const numIndividualChunks = Math.ceil(numIndividualModules / chunkSize);
            console.log(`Modules: ${numIndividualModules} (${numIndividualChunks} chunks of ${chunkSize})`);

            const matrix = { chunk: Array.from({ length: numIndividualChunks }, (_, i) => i) };
            console.log('Matrix:', matrix);

            core.setOutput('individualMatrix', JSON.stringify(matrix));

  build:
    name: Build job
    runs-on: ubuntu-latest
    needs: prepare
    strategy:
      matrix: ${{ fromJson(needs.prepare.outputs.individualMatrix) }}
    steps:
      - name: Clone repo
        uses: actions/checkout@v3

      - name: Build chunk
        run: |
          echo "Building chunk ${{ matrix.chunk }}..."
          # Add your build commands here
