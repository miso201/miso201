name: MCOS

on:
  push:
    branches:
      - main  # Trigger when pushing to the main branch

jobs:
  install-and-upload:
    runs-on: macos-latest  # Use macOS as the environment

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install Homebrew (if not installed)
      run: |
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
        export PATH="/opt/homebrew/bin:$PATH"

    - name: Install RustDesk
      run: |
        brew install --cask rustdesk

    - name: Configure RustDesk
      run: |
        mkdir -p ~/.config/rustdesk
        echo '{"device_name": "MCOS"}' > ~/.config/rustdesk/config.json  # Set device name

    - name: Start RustDesk in background
      run: |
        /Applications/RustDesk.app/Contents/MacOS/RustDesk &

    - name: Capture RustDesk ID and Password
      run: |
        sleep 5  # Wait for RustDesk to initialize
        ID=$(cat ~/.config/rustdesk/id)
        PASSWORD=$(cat ~/.config/rustdesk/password)
        echo "Device ID: $ID" > rustdesk_info.txt
        echo "Password: $PASSWORD" >> rustdesk_info.txt
        cat rustdesk_info.txt

    - name: Capture Screenshot
      run: |
        screencapture -x screenshot.png  # Capture screenshot and save as screenshot.png

    - name: Install Python and Create Virtual Environment
      run: |
        brew install python  # Ensure Python is installed
        python3 -m venv venv  # Create a virtual environment
        source venv/bin/activate  # Activate the virtual environment

    - name: Install Python Dependencies
      run: |
        source venv/bin/activate  # Activate virtual environment
        pip install --upgrade pip  # Upgrade pip
        pip install requests  # Install required dependencies

    - name: Upload Screenshot and RustDesk Info to Gofile
      run: |
        source venv/bin/activate  # Ensure virtual environment is activated
        python3 - <<EOF
        import requests

        def upload_file_to_gofile(file_path):
            url = 'https://store1.gofile.io/uploadFile'
            try:
                with open(file_path, 'rb') as file:
                    files = {'file': file}
                    response = requests.post(url, files=files)
                    response.raise_for_status()  # Throws error for HTTP issues
                    result = response.json()

                    if result['status'] == 'ok':
                        download_page = result['data']['downloadPage']
                        print(f"File uploaded successfully! Download link: {download_page}")
                        return download_page
                    else:
                        print("Upload error:", result.get('status'))
                        return None
            except Exception as e:
                print(f"Failed to upload file: {e}")
                return None

        # Upload RustDesk info and screenshot
        rustdesk_info_path = 'rustdesk_info.txt'
        screenshot_path = 'screenshot.png'

        rustdesk_link = upload_file_to_gofile(rustdesk_info_path)
        screenshot_link = upload_file_to_gofile(screenshot_path)

        if rustdesk_link:
            print(f"Access RustDesk info at: {rustdesk_link}")
        else:
            print("Failed to upload RustDesk info.")

        if screenshot_link:
            print(f"Access Screenshot at: {screenshot_link}")
        else:
            print("Failed to upload screenshot.")
        EOF

    - name: Keep the job running
      run: sleep 999999  # Keep the workflow running indefinitely
