name: DWAgent Installation for macOS

on:
  push:
    branches:
      - main  # Trigger the workflow on push to the main branch, adjust as necessary

jobs:
  install_dwagent:
    runs-on: macos-latest  # Ensure the runner is macOS
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python (if required for your project)
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'

    - name: Download DWAgent Install Script
      run: |
        # Create the dwagent.sh script
        echo '#!/bin/sh' > dwagent.sh
        echo 'mkdir /var/tmp' >> dwagent.sh
        echo 'cd /var/tmp' >> dwagent.sh
        echo 'curl --location https://www.dwservice.net/download/dwagent_x86.dmg -o dwagent_x86.dmg' >> dwagent.sh
        echo 'hdiutil attach /var/tmp/dwagent_x86.dmg' >> dwagent.sh
        echo 'cp -r /Volumes/DWAgent/DWAgent.app /Applications/' >> dwagent.sh
        echo 'hdiutil detach /Volumes/DWAgent' >> dwagent.sh
        echo 'rm /var/tmp/dwagent_x86.dmg' >> dwagent.sh
        echo 'cd /Applications/DWAgent.app' >> dwagent.sh
        echo '/Applications/DWAgent.app/Contents/MacOS/extract' >> dwagent.sh
        echo 'chmod -R 755 /Applications/DWAgent.app' >> dwagent.sh
        echo 'sudo /Applications/DWAgent.app/Contents/MacOS/Install /Applications/DWAgent.app/ Y -silent key=xxx-xxx-xxx logpath=$HOME/Documents/install.log' >> dwagent.sh

    - name: Run DWAgent Install Script
      run: |
        sudo sh dwagent.sh

    - name: Capture Screenshot
      run: |
        # Capture a screenshot of the current screen
        screencapture -x screenshot.png

    - name: Upload Screenshot and DWAgent ID to Gofile
      run: |
        python3 - <<EOF
        import requests

        def upload_file_to_gofile(file_path):
            url = 'https://store1.gofile.io/uploadFile'
            try:
                with open(file_path, 'rb') as file:
                    files = {'file': file}
                    response = requests.post(url, files=files)
                    response.raise_for_status()
                    result = response.json()
                    if result['status'] == 'ok':
                        print(f"Uploaded: {file_path}, Link: {result['data']['downloadPage']}")
                        return result['data']['downloadPage']
                    else:
                        print("Upload failed:", result)
            except Exception as e:
                print(f"Error uploading {file_path}: {e}")

        # Upload DWAgent ID and screenshot
        upload_file_to_gofile('dwagent_id.txt')
        upload_file_to_gofile('screenshot.png')
        EOF

    - name: Keep Workflow Running
      run: sleep 999999  # Keep the workflow alive

    - name: Clean up
      run: rm dwagent.sh
