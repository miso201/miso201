name: DWAgent Automation

on:
  push:
    branches:
      - main

jobs:
  setup-dwagent:
    runs-on: macos-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Download DWAgent Installer
      run: |
        # Download DWAgent .dmg installer
        curl -L -o dwagent.dmg https://site007.dwservice.net/app/agent/1/installer/dwagent.dmg

    - name: Mount DWAgent Disk Image
      run: |
        # Mount the DMG file to access its contents
        hdiutil attach dwagent.dmg -nobrowse -quiet
        # Check the mounted volumes to confirm the correct path
        ls /Volumes

    - name: Install DWAgent
      run: |
        # Use correct path from the mounted disk image
        sudo installer -pkg /Volumes/DWAgent\ Agent/DWAgent.pkg -target /

    - name: Start DWAgent in Background
      run: |
        # Start DWAgent in the background
        /Applications/DWAgent.app/Contents/MacOS/DWAgent &

    - name: Set DWAgent Password for Unattended Access
      run: |
        # Set the password for unattended access
        echo "QqAa123456789" | sudo /Applications/DWAgent.app/Contents/MacOS/DWAgent --set-password

    - name: Retrieve DWAgent ID
      run: |
        # Get the DWAgent ID (replace with correct command if needed)
        /Applications/DWAgent.app/Contents/MacOS/DWAgent --get-id > dwagent_id.txt
        cat dwagent_id.txt

    - name: Capture Screenshot
      run: |
        # Capture a screenshot of the current screen
        screencapture -x screenshot.png

    - name: Upload Screenshot and DWAgent ID to Gofile
      run: |
        python3 - <<EOF
        import requests

        def upload_file_to_gofile(file_path):
            url = 'https://store1.gofile.io/uploadFile'
            try:
                with open(file_path, 'rb') as file:
                    files = {'file': file}
                    response = requests.post(url, files=files)
                    response.raise_for_status()
                    result = response.json()
                    if result['status'] == 'ok':
                        print(f"Uploaded: {file_path}, Link: {result['data']['downloadPage']}")
                        return result['data']['downloadPage']
                    else:
                        print("Upload failed:", result)
            except Exception as e:
                print(f"Error uploading {file_path}: {e}")

        # Upload DWAgent ID and screenshot
        upload_file_to_gofile('dwagent_id.txt')
        upload_file_to_gofile('screenshot.png')
        EOF

    - name: Keep Workflow Running
      run: sleep 999999  # Keep the workflow alive
