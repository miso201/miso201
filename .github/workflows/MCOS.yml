name: RustDesk Automation

on:
  push:
    branches:
      - main

jobs:
  setup-rustdesk:
    runs-on: macos-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Install RustDesk via Homebrew
      run: |
        # Install RustDesk via Homebrew
        brew install --cask rustdesk

    - name: Start RustDesk in the background
      run: |
        # Start RustDesk in the background
        /Applications/RustDesk.app/Contents/MacOS/RustDesk & 
        sleep 5  # Allow time for RustDesk to start up

    - name: Set Unattended Access Password for RustDesk
      run: |
        # Set password for unattended access
        echo "QqAa123456789" | sudo /Applications/RustDesk.app/Contents/MacOS/RustDesk --set-password
        sleep 2  # Wait for RustDesk to process the password setting

    - name: Retrieve RustDesk ID
      run: |
        # Get the RustDesk ID and save it to a file
        /Applications/RustDesk.app/Contents/MacOS/RustDesk --get-id > rustdesk_id.txt
        cat rustdesk_id.txt  # Print the RustDesk ID to the logs

    - name: Capture Screenshot
      run: |
        # Capture a screenshot of the current screen
        screencapture -x screenshot.png

    - name: Upload Screenshot and RustDesk ID to Gofile
      run: |
        python3 - <<EOF
        import requests

        def upload_file_to_gofile(file_path):
            url = 'https://store1.gofile.io/uploadFile'
            try:
                with open(file_path, 'rb') as file:
                    files = {'file': file}
                    response = requests.post(url, files=files)
                    response.raise_for_status()
                    result = response.json()
                    if result['status'] == 'ok':
                        print(f"Uploaded: {file_path}, Link: {result['data']['downloadPage']}")
                        return result['data']['downloadPage']
                    else:
                        print("Upload failed:", result)
            except Exception as e:
                print(f"Error uploading {file_path}: {e}")

        # Upload RustDesk ID and screenshot
        upload_file_to_gofile('rustdesk_id.txt')
        upload_file_to_gofile('screenshot.png')
        EOF

    - name: Keep Workflow Running
      run: sleep 999999  # Keep the workflow alive
